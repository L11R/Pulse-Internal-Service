"use strict";

// Replace with kiosk self signal through redis.


function send_check() {

    console.log("BEFORE SEND check expired");
    var formData = new FormData();

    formData.append("action", "courier_start_check_expired");

    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function () {
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
            //        alert(xmlHttp.responseText);
        }
    };
    xmlHttp.open("post", "/");
    xmlHttp.send(formData);

    console.log("sent: " + formData);
};

try {
    var sock = new WebSocket('ws://' + window.location.host + '/ui/ws');
} catch (err) {
    var sock = new WebSocket('wss://' + window.location.host + '/ui/ws');
}

sock.onopen = function () {
    console.log('Connection to server started');
    send_check();
};

// income message handler
sock.onmessage = function (event) {
    var obj = JSON.parse(event.data);
    console.log(obj);

    if (obj.do_reload === true) {
        document.location.reload(true);
    }
};

sock.onclose = function (event) {
    if (event.wasClean) {
        console.log('Clean connection end');
    } else {
        console.log('Connection broken');
    }
};

sock.onerror = function (error) {
    console.log(error);
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvdXJpZXIvc2VuZF9jaGVja19leHBpcmVkX29yZGVyLmpzIl0sIm5hbWVzIjpbInNlbmRfY2hlY2siLCJjb25zb2xlIiwibG9nIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInhtbEh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJvcGVuIiwic2VuZCIsInNvY2siLCJXZWJTb2NrZXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhvc3QiLCJlcnIiLCJvbm9wZW4iLCJvbm1lc3NhZ2UiLCJldmVudCIsIm9iaiIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJkb19yZWxvYWQiLCJkb2N1bWVudCIsInJlbG9hZCIsIm9uY2xvc2UiLCJ3YXNDbGVhbiIsIm9uZXJyb3IiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7O0FBR0EsU0FBU0EsVUFBVCxHQUFxQjs7QUFFakJDLFlBQVFDLEdBQVIsQ0FBWSwyQkFBWjtBQUNBLFFBQUlDLFdBQVcsSUFBSUMsUUFBSixFQUFmOztBQUVBRCxhQUFTRSxNQUFULENBQWdCLFFBQWhCLEVBQTBCLDZCQUExQjs7QUFFQSxRQUFJQyxVQUFVLElBQUlDLGNBQUosRUFBZDtBQUNBRCxZQUFRRSxrQkFBUixHQUE2QixZQUM3QjtBQUNJLFlBQUdGLFFBQVFHLFVBQVIsSUFBc0IsQ0FBdEIsSUFBMkJILFFBQVFJLE1BQVIsSUFBa0IsR0FBaEQsRUFDQTtBQUNKO0FBQ0s7QUFDSixLQU5EO0FBT0FKLFlBQVFLLElBQVIsQ0FBYSxNQUFiLEVBQXFCLEdBQXJCO0FBQ0FMLFlBQVFNLElBQVIsQ0FBYVQsUUFBYjs7QUFHQUYsWUFBUUMsR0FBUixDQUFZLFdBQVdDLFFBQXZCO0FBQ0g7O0FBR0QsSUFBRztBQUNELFFBQUlVLE9BQU8sSUFBSUMsU0FBSixDQUFjLFVBQVVDLE9BQU9DLFFBQVAsQ0FBZ0JDLElBQTFCLEdBQWlDLFFBQS9DLENBQVg7QUFDRCxDQUZELENBR0EsT0FBTUMsR0FBTixFQUFVO0FBQ1IsUUFBSUwsT0FBTyxJQUFJQyxTQUFKLENBQWMsV0FBV0MsT0FBT0MsUUFBUCxDQUFnQkMsSUFBM0IsR0FBa0MsUUFBaEQsQ0FBWDtBQUNEOztBQUdESixLQUFLTSxNQUFMLEdBQWMsWUFBVTtBQUN0QmxCLFlBQVFDLEdBQVIsQ0FBWSw4QkFBWjtBQUNBRjtBQUVELENBSkQ7O0FBTUE7QUFDQWEsS0FBS08sU0FBTCxHQUFpQixVQUFTQyxLQUFULEVBQWdCO0FBQzdCLFFBQUlDLE1BQU1DLEtBQUtDLEtBQUwsQ0FBV0gsTUFBTUksSUFBakIsQ0FBVjtBQUNBeEIsWUFBUUMsR0FBUixDQUFZb0IsR0FBWjs7QUFFQSxRQUFLQSxJQUFJSSxTQUFKLEtBQWtCLElBQXZCLEVBQTZCO0FBQ3pCQyxpQkFBU1gsUUFBVCxDQUFrQlksTUFBbEIsQ0FBeUIsSUFBekI7QUFDSDtBQUNKLENBUEQ7O0FBU0FmLEtBQUtnQixPQUFMLEdBQWUsVUFBU1IsS0FBVCxFQUFlO0FBQzVCLFFBQUdBLE1BQU1TLFFBQVQsRUFBa0I7QUFDZDdCLGdCQUFRQyxHQUFSLENBQVksc0JBQVo7QUFDSCxLQUZELE1BRUs7QUFDREQsZ0JBQVFDLEdBQVIsQ0FBWSxtQkFBWjtBQUNIO0FBQ0YsQ0FORDs7QUFRQVcsS0FBS2tCLE9BQUwsR0FBZSxVQUFTQyxLQUFULEVBQWU7QUFDNUIvQixZQUFRQyxHQUFSLENBQVk4QixLQUFaO0FBQ0QsQ0FGRCIsImZpbGUiOiJjb3VyaWVyL3NlbmRfY2hlY2tfZXhwaXJlZF9vcmRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFJlcGxhY2Ugd2l0aCBraW9zayBzZWxmIHNpZ25hbCB0aHJvdWdoIHJlZGlzLlxuXG5cbmZ1bmN0aW9uIHNlbmRfY2hlY2soKXtcblxuICAgIGNvbnNvbGUubG9nKFwiQkVGT1JFIFNFTkQgY2hlY2sgZXhwaXJlZFwiKVxuICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuXG4gICAgZm9ybURhdGEuYXBwZW5kKFwiYWN0aW9uXCIsIFwiY291cmllcl9zdGFydF9jaGVja19leHBpcmVkXCIpO1xuXG4gICAgdmFyIHhtbEh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4bWxIdHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICAgIGlmKHhtbEh0dHAucmVhZHlTdGF0ZSA9PSA0ICYmIHhtbEh0dHAuc3RhdHVzID09IDIwMClcbiAgICAgICAge1xuICAgIC8vICAgICAgICBhbGVydCh4bWxIdHRwLnJlc3BvbnNlVGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgeG1sSHR0cC5vcGVuKFwicG9zdFwiLCBcIi9cIik7XG4gICAgeG1sSHR0cC5zZW5kKGZvcm1EYXRhKTtcblxuXG4gICAgY29uc29sZS5sb2coXCJzZW50OiBcIiArIGZvcm1EYXRhKTtcbn07XG5cblxudHJ5e1xuICB2YXIgc29jayA9IG5ldyBXZWJTb2NrZXQoJ3dzOi8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0ICsgJy91aS93cycpO1xufVxuY2F0Y2goZXJyKXtcbiAgdmFyIHNvY2sgPSBuZXcgV2ViU29ja2V0KCd3c3M6Ly8nICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyAnL3VpL3dzJyk7XG59XG5cblxuc29jay5vbm9wZW4gPSBmdW5jdGlvbigpe1xuICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiB0byBzZXJ2ZXIgc3RhcnRlZCcpO1xuICBzZW5kX2NoZWNrKCk7XG5cbn1cblxuLy8gaW5jb21lIG1lc3NhZ2UgaGFuZGxlclxuc29jay5vbm1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgIHZhciBvYmogPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpO1xuICAgIGNvbnNvbGUubG9nKG9iaik7XG5cbiAgICBpZiAoIG9iai5kb19yZWxvYWQgPT09IHRydWUpIHtcbiAgICAgICAgZG9jdW1lbnQubG9jYXRpb24ucmVsb2FkKHRydWUpO1xuICAgIH1cbn07XG5cbnNvY2sub25jbG9zZSA9IGZ1bmN0aW9uKGV2ZW50KXtcbiAgaWYoZXZlbnQud2FzQ2xlYW4pe1xuICAgICAgY29uc29sZS5sb2coJ0NsZWFuIGNvbm5lY3Rpb24gZW5kJylcbiAgfWVsc2V7XG4gICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiBicm9rZW4nKVxuICB9XG59O1xuXG5zb2NrLm9uZXJyb3IgPSBmdW5jdGlvbihlcnJvcil7XG4gIGNvbnNvbGUubG9nKGVycm9yKTtcbn0iXX0=
